const { PREFIX } = require("../../krampus");
const { downloadMusic } = require("../../services/ytdpl");
const ytSearch = require('yt-search');
const fs = require('fs');
const path = require('path');
const fetch = require('node-fetch'); // Aseg√∫rate de tener instalado node-fetch

module.exports = {
  name: "musica",
  description: "Descargar y enviar m√∫sica desde YouTube",
  commands: ["musica", "m"],
  usage: `${PREFIX}musica <nombre del video>`,
  handle: async ({ socket, remoteJid, sendReply, args, sendWaitReact, sendMusicReact, userJid, webMessage }) => {
    try {
      const videoQuery = args.join(" ");
      if (!videoQuery) {
        await sendReply("‚ùå Por favor, proporciona el nombre del video que deseas buscar.");
        return;
      }

      // Reacci√≥n inicial mientras buscamos y descargamos
      await sendWaitReact("‚è≥");
      await sendReply("Estoy buscando y descargando la m√∫sica, por favor espera...", { quoted: webMessage });

      // Realizamos la b√∫squeda en YouTube
      const searchResult = await ytSearch(videoQuery);
      const video = searchResult.videos[0];
      if (!video) {
        await sendReply("‚ùå No se encontr√≥ ning√∫n video con ese nombre.");
        return;
      }

      const videoUrl = video.url;
      const thumbnailUrl = video.thumbnail;
      console.log(`Video encontrado: ${video.title}, URL: ${videoUrl}`);

      // Descargamos la miniatura
      const thumbnailPath = path.resolve(__dirname, "..", "..", "temp", `${video.title.replace(/[^a-zA-Z0-9]/g, "")}.jpg`);
      const response = await fetch(thumbnailUrl);
      const buffer = await response.buffer();
      fs.writeFileSync(thumbnailPath, buffer);

      // Llamamos a la funci√≥n downloadMusic para descargar la m√∫sica
      const musicPath = await downloadMusic(videoUrl);
      console.log(`M√∫sica descargada correctamente: ${musicPath}`);

      // Reacci√≥n para indicar que la m√∫sica est√° lista
      await sendMusicReact("üéµ");

      // Enviar la m√∫sica como archivo, respondiendo al mensaje de quien us√≥ el comando
      await socket.sendMessage(remoteJid, {
        audio: { url: musicPath },
        mimetype: "audio/mp4",
        caption: `Aqu√≠ tienes la m√∫sica üé∂ - ${video.title}`,
        quoted: webMessage,  // Responde al mensaje original
        ptt: false,
        image: { url: thumbnailPath },  // Enviar la miniatura como imagen
      });

      // Eliminar el archivo de m√∫sica y la miniatura despu√©s de enviarlos
      setTimeout(() => {
        fs.unlink(musicPath, (err) => {
          if (err) {
            console.error(`Error al eliminar el archivo de m√∫sica: ${err}`);
          } else {
            console.log(`Archivo de m√∫sica eliminado: ${musicPath}`);
          }
        });

        fs.unlink(thumbnailPath, (err) => {
          if (err) {
            console.error(`Error al eliminar la miniatura: ${err}`);
          } else {
            console.log(`Miniatura eliminada: ${thumbnailPath}`);
          }
        });
      }, 3 * 60 * 1000); // Eliminar despu√©s de 3 minutos
    } catch (error) {
      console.error("Error al descargar o enviar la m√∫sica:", error);
      await sendReply("‚ùå Hubo un error al procesar la m√∫sica.");
    }
  },
};